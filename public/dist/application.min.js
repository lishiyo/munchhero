"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.utils","ngSanitize","ionic","ionic.contrib.ui.tinderCards"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("foursquare"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create"),Menus.addMenuItem("topbar","Map Search","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","Search Places","articles"),Menus.addSubMenuItem("topbar","articles","Swipe Food","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);var setUpMap=function(){var getLocation=function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(showPosition):console.log("Geolocation is not supported by this browser.")},showPosition=function(position){var theLatLng=new google.maps.LatLng(Number(position.coords.latitude),Number(position.coords.longitude));document.getElementById("lat").setAttribute("value",position.coords.latitude),document.getElementById("lng").setAttribute("value",position.coords.longitude);var mapOptions={zoom:15,center:theLatLng},map=new google.maps.Map(document.getElementById("map-canvas"),mapOptions),infoWindows=(new google.maps.Marker({position:theLatLng,map:map,title:"Center",icon:"http://maps.google.com/mapfiles/ms/icons/blue-dot.png"}),[]),markers=[],latLngBounds=new google.maps.LatLngBounds;void 0!==latLng&&latLng.length>0&&latLng.forEach(function(item){infoWindows.push(new google.maps.InfoWindow({content:"<div>"+item.name+"</div><div>Rating: "+item.rating+"</div><div>Price Level: "+item.price+"</div>"}));var latLng=new google.maps.LatLng(item.lat,item.lng);markers.push(new google.maps.Marker({position:latLng,map:map,title:item.name,icon:"http://maps.google.com/mapfiles/ms/icons/red-dot.png"})),latLngBounds.extend(latLng)}),map.setCenter(latLngBounds.getCenter()),map.fitBounds(latLngBounds);for(var i=0;i<markers.length;i++)google.maps.event.addListener(markers[i],"click",function(innerKey){var clicks=0;return function(){clicks++,infoWindows[innerKey].open(map,markers[innerKey])}}(i))};getLocation()};angular.module("core").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}}).controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication,$scope.loadScript=function(){var script=document.createElement("script");script.type="text/javascript",script.src="https://maps.googleapis.com/maps/api/js?v=3.exp&callback=setUpMap",document.body.appendChild(script)},$scope.getSearch=function(){var lat=angular.element(document.querySelector("#lat")).val(),lng=angular.element(document.querySelector("#lng")).val(),url="/searchFood?query="+this.query+"&lat="+lat+"&lng="+lng;console.log("getSearch",url),$location.path("/searchFood").search({query:this.query,lat:lat,lng:lng})}}]);var setUpMap=function(){var getLocation=function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(showPosition):console.log("Geolocation is not supported by this browser.")},showPosition=function(position){var theLatLng=new google.maps.LatLng(Number(position.coords.latitude),Number(position.coords.longitude));console.log("showposition",theLatLng),document.getElementById("lat").setAttribute("value",position.coords.latitude),document.getElementById("lng").setAttribute("value",position.coords.longitude);var mapOptions={zoom:15,center:theLatLng},map=new google.maps.Map(document.getElementById("map-canvas"),mapOptions),infoWindows=(new google.maps.Marker({position:theLatLng,map:map,title:"Center",icon:"http://maps.google.com/mapfiles/ms/icons/blue-dot.png"}),[]),markers=[],latLngBounds=new google.maps.LatLngBounds;void 0!==latLng&&latLng.length>0&&latLng.forEach(function(item){infoWindows.push(new google.maps.InfoWindow({content:"<div>"+item.name+"</div><div>Rating: "+item.rating+"</div><div>Price Level: "+item.price+"</div>"}));var latLng=new google.maps.LatLng(item.lat,item.lng);markers.push(new google.maps.Marker({position:latLng,map:map,title:item.name,icon:"http://maps.google.com/mapfiles/ms/icons/red-dot.png"})),latLngBounds.extend(latLng)}),map.setCenter(latLngBounds.getCenter()),map.fitBounds(latLngBounds);for(var i=0;i<markers.length;i++)google.maps.event.addListener(markers[i],"click",function(innerKey){var clicks=0;return function(){clicks++,infoWindows[innerKey].open(map,markers[innerKey])}}(i))};getLocation()};angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("foursquare",["ionic","ionic.contrib.ui.tinderCards"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("mainSearch",{url:"/searchFood",templateUrl:"modules/foursquare/views/main_search.client.view.html"})}]),angular.module("foursquare").directive("noScroll",["$document",function($document){return{restrict:"A",link:function(){$document.on("touchmove",function(e){e.preventDefault()})}}}]).controller("MainSearchController",["$scope","$stateParams","$location","Authentication","$http","$templateCache",function($scope,$stateParams,$location,Authentication,$http){$scope.authentication=Authentication;var url=$location.url(),getFoodPics=function(){$http.get(url).success(function(data){$scope.venues=data.venuesArr,$scope.photos=data.photosArr,$scope.latLng=[],$scope.venues.forEach(function(venue){$scope.latLng.push({lat:Number(venue.location.lat),lng:Number(venue.location.lng),name:venue.name,rating:venue.rating,price:venue.price})},this),$scope.createCards()}).error(function(data){console.log("error",data)})};$scope.loadAll=function(){getFoodPics()},$scope.showData=function(card){console.log("clicked showdata",card,card.vName);var dataBox=angular.element(document.querySelector("div.card-data"));dataBox.toggleClass("hidden")},$scope.createCards=function(){$scope.cardTypes=$scope.photos,$scope.cards=Array.prototype.slice.call($scope.cardTypes,0)},$scope.cardDestroyed=function(index){$scope.cards.splice(index,1)},$scope.addCard=function(){var newCard=$scope.cardTypes[Math.floor(Math.random()*$scope.cardTypes.length)];newCard.id=Math.random(),$scope.cards.push(angular.extend({},newCard))}}]).controller("CardCtrl",["$scope","$stateParams","$location","Authentication","$http","$templateCache",function($scope){$scope.cardSwipedLeft=function(){console.log("LEFT SWIPE"),$scope.addCard()},$scope.cardSwipedRight=function(){console.log("RIGHT SWIPE"),$scope.addCard()}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);